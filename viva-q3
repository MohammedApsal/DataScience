from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score

# Load the Iris dataset
iris = load_iris()
X = iris.data
y = iris.target

# Split the data into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the Decision Tree model
clf = DecisionTreeClassifier(random_state=42)

# Fit the model to the training data
clf.fit(X_train, y_train)

# Predict on the test data to evaluate accuracy
y_pred = clf.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f'Model accuracy on test data: {accuracy:.2f}')

# Function to predict the species of a new iris flower
def predict_species(sepal_length, sepal_width, petal_length, petal_width):
    new_flower = [[sepal_length, sepal_width, petal_length, petal_width]]
    prediction = clf.predict(new_flower)
    species = iris.target_names[prediction][0]
    return species

# Input features of a new iris flower
sepal_length = 5.1
sepal_width = 3.5
petal_length = 1.4
petal_width = 0.2

# Predict the species for the new flower
predicted_species = predict_species(sepal_length, sepal_width, petal_length, petal_width)
print(f'The predicted species for the new flower is: {predicted_species}')
